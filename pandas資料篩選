{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "13izviwdxy97nGIeIN2vI_jEOjKkHWF6u",
      "authorship_tag": "ABX9TyMHxbbaRalCv3OkUu2j8E0E",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ch07qqq/10732152/blob/main/pandas%E8%B3%87%E6%96%99%E7%AF%A9%E9%81%B8\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "ljTzsqmtzO8Q"
      },
      "outputs": [],
      "source": [
        "import plotly\n",
        "import pandas as pd\n",
        "# Load data\n",
        "df = pd.read_csv(\n",
        "    \"https://raw.githubusercontent.com/plotly/datasets/master/Wage%20Rigidity%20Dataset.csv\")\n",
        "df.columns = [col.replace(\"AAPL.\", \"\") for col in df.columns]\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ASKGelYF2Qug",
        "outputId": "f6ce0cf0-d780-48a3-c913-0e08087680ab"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "           Date  All workers (hourly and non-hourly)  Hourly workers  \\\n",
            "0    01/01/1980                                  NaN             NaN   \n",
            "1    01/02/1980                                  NaN             NaN   \n",
            "2    01/03/1980                                  NaN             NaN   \n",
            "3    01/04/1980                                  NaN             NaN   \n",
            "4    01/05/1980                                  NaN             NaN   \n",
            "..          ...                                  ...             ...   \n",
            "430  01/11/2015                            15.220686       19.835676   \n",
            "431  01/12/2015                            15.318343       19.795307   \n",
            "432  01/01/2016                            15.065660       19.726503   \n",
            "433  01/02/2016                            15.088362       19.571522   \n",
            "434  01/03/2016                            14.882187       19.547895   \n",
            "\n",
            "     Non-hourly workers  Less than high school  High school  Some college  \\\n",
            "0                   NaN                    NaN          NaN           NaN   \n",
            "1                   NaN                    NaN          NaN           NaN   \n",
            "2                   NaN                    NaN          NaN           NaN   \n",
            "3                   NaN                    NaN          NaN           NaN   \n",
            "4                   NaN                    NaN          NaN           NaN   \n",
            "..                  ...                    ...          ...           ...   \n",
            "430           10.412375              20.139553    16.990258     16.245919   \n",
            "431           10.584722              20.148527    17.477930     16.174358   \n",
            "432           10.078912              19.380375    17.519733     16.078945   \n",
            "433           10.199413              18.552658    17.799672     16.272069   \n",
            "434            9.795581              17.242673    17.845474     15.845539   \n",
            "\n",
            "       College  Construction    Finance  Manufacturing  \n",
            "0          NaN           NaN        NaN            NaN  \n",
            "1          NaN           NaN        NaN            NaN  \n",
            "2          NaN           NaN        NaN            NaN  \n",
            "3          NaN           NaN        NaN            NaN  \n",
            "4          NaN           NaN        NaN            NaN  \n",
            "..         ...           ...        ...            ...  \n",
            "430  12.798665     18.898419  13.765537      15.450202  \n",
            "431  12.842890     17.732779  14.343793      16.032071  \n",
            "432  12.451565     18.125369  14.721660      16.825113  \n",
            "433  12.283532     17.920376  13.802473      16.828383  \n",
            "434  12.287024     17.805233  13.407137      16.150569  \n",
            "\n",
            "[435 rows x 11 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import plotly.graph_objects as go\n",
        "line1 = go.Scatter(x=df['Date'], y=df['All workers (hourly and non-hourly)'], name='Hourly workers')\n",
        "fig  = go.Figure(line1)\n",
        "fig.show()\n",
        "plotly.offline.plot(fig, filename='lifeExp.html')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 561
        },
        "id": "v0sIVSfj2XAg",
        "outputId": "81b9feaf-58d8-4750-edfc-9bcca5a60e31"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"93c08c27-7032-414b-9037-f81f71363e13\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"93c08c27-7032-414b-9037-f81f71363e13\")) {                    Plotly.newPlot(                        \"93c08c27-7032-414b-9037-f81f71363e13\",                        [{\"name\":\"Hourly workers\",\"x\":[\"01\\u002f01\\u002f1980\",\"01\\u002f02\\u002f1980\",\"01\\u002f03\\u002f1980\",\"01\\u002f04\\u002f1980\",\"01\\u002f05\\u002f1980\",\"01\\u002f06\\u002f1980\",\"01\\u002f07\\u002f1980\",\"01\\u002f08\\u002f1980\",\"01\\u002f09\\u002f1980\",\"01\\u002f10\\u002f1980\",\"01\\u002f11\\u002f1980\",\"01\\u002f12\\u002f1980\",\"01\\u002f01\\u002f1981\",\"01\\u002f02\\u002f1981\",\"01\\u002f03\\u002f1981\",\"01\\u002f04\\u002f1981\",\"01\\u002f05\\u002f1981\",\"01\\u002f06\\u002f1981\",\"01\\u002f07\\u002f1981\",\"01\\u002f08\\u002f1981\",\"01\\u002f09\\u002f1981\",\"01\\u002f10\\u002f1981\",\"01\\u002f11\\u002f1981\",\"01\\u002f12\\u002f1981\",\"01\\u002f01\\u002f1982\",\"01\\u002f02\\u002f1982\",\"01\\u002f03\\u002f1982\",\"01\\u002f04\\u002f1982\",\"01\\u002f05\\u002f1982\",\"01\\u002f06\\u002f1982\",\"01\\u002f07\\u002f1982\",\"01\\u002f08\\u002f1982\",\"01\\u002f09\\u002f1982\",\"01\\u002f10\\u002f1982\",\"01\\u002f11\\u002f1982\",\"01\\u002f12\\u002f1982\",\"01\\u002f01\\u002f1983\",\"01\\u002f02\\u002f1983\",\"01\\u002f03\\u002f1983\",\"01\\u002f04\\u002f1983\",\"01\\u002f05\\u002f1983\",\"01\\u002f06\\u002f1983\",\"01\\u002f07\\u002f1983\",\"01\\u002f08\\u002f1983\",\"01\\u002f09\\u002f1983\",\"01\\u002f10\\u002f1983\",\"01\\u002f11\\u002f1983\",\"01\\u002f12\\u002f1983\",\"01\\u002f01\\u002f1984\",\"01\\u002f02\\u002f1984\",\"01\\u002f03\\u002f1984\",\"01\\u002f04\\u002f1984\",\"01\\u002f05\\u002f1984\",\"01\\u002f06\\u002f1984\",\"01\\u002f07\\u002f1984\",\"01\\u002f08\\u002f1984\",\"01\\u002f09\\u002f1984\",\"01\\u002f10\\u002f1984\",\"01\\u002f11\\u002f1984\",\"01\\u002f12\\u002f1984\",\"01\\u002f01\\u002f1985\",\"01\\u002f02\\u002f1985\",\"01\\u002f03\\u002f1985\",\"01\\u002f04\\u002f1985\",\"01\\u002f05\\u002f1985\",\"01\\u002f06\\u002f1985\",\"01\\u002f07\\u002f1985\",\"01\\u002f08\\u002f1985\",\"01\\u002f09\\u002f1985\",\"01\\u002f10\\u002f1985\",\"01\\u002f11\\u002f1985\",\"01\\u002f12\\u002f1985\",\"01\\u002f01\\u002f1986\",\"01\\u002f02\\u002f1986\",\"01\\u002f03\\u002f1986\",\"01\\u002f04\\u002f1986\",\"01\\u002f05\\u002f1986\",\"01\\u002f06\\u002f1986\",\"01\\u002f07\\u002f1986\",\"01\\u002f08\\u002f1986\",\"01\\u002f09\\u002f1986\",\"01\\u002f10\\u002f1986\",\"01\\u002f11\\u002f1986\",\"01\\u002f12\\u002f1986\",\"01\\u002f01\\u002f1987\",\"01\\u002f02\\u002f1987\",\"01\\u002f03\\u002f1987\",\"01\\u002f04\\u002f1987\",\"01\\u002f05\\u002f1987\",\"01\\u002f06\\u002f1987\",\"01\\u002f07\\u002f1987\",\"01\\u002f08\\u002f1987\",\"01\\u002f09\\u002f1987\",\"01\\u002f10\\u002f1987\",\"01\\u002f11\\u002f1987\",\"01\\u002f12\\u002f1987\",\"01\\u002f01\\u002f1988\",\"01\\u002f02\\u002f1988\",\"01\\u002f03\\u002f1988\",\"01\\u002f04\\u002f1988\",\"01\\u002f05\\u002f1988\",\"01\\u002f06\\u002f1988\",\"01\\u002f07\\u002f1988\",\"01\\u002f08\\u002f1988\",\"01\\u002f09\\u002f1988\",\"01\\u002f10\\u002f1988\",\"01\\u002f11\\u002f1988\",\"01\\u002f12\\u002f1988\",\"01\\u002f01\\u002f1989\",\"01\\u002f02\\u002f1989\",\"01\\u002f03\\u002f1989\",\"01\\u002f04\\u002f1989\",\"01\\u002f05\\u002f1989\",\"01\\u002f06\\u002f1989\",\"01\\u002f07\\u002f1989\",\"01\\u002f08\\u002f1989\",\"01\\u002f09\\u002f1989\",\"01\\u002f10\\u002f1989\",\"01\\u002f11\\u002f1989\",\"01\\u002f12\\u002f1989\",\"01\\u002f01\\u002f1990\",\"01\\u002f02\\u002f1990\",\"01\\u002f03\\u002f1990\",\"01\\u002f04\\u002f1990\",\"01\\u002f05\\u002f1990\",\"01\\u002f06\\u002f1990\",\"01\\u002f07\\u002f1990\",\"01\\u002f08\\u002f1990\",\"01\\u002f09\\u002f1990\",\"01\\u002f10\\u002f1990\",\"01\\u002f11\\u002f1990\",\"01\\u002f12\\u002f1990\",\"01\\u002f01\\u002f1991\",\"01\\u002f02\\u002f1991\",\"01\\u002f03\\u002f1991\",\"01\\u002f04\\u002f1991\",\"01\\u002f05\\u002f1991\",\"01\\u002f06\\u002f1991\",\"01\\u002f07\\u002f1991\",\"01\\u002f08\\u002f1991\",\"01\\u002f09\\u002f1991\",\"01\\u002f10\\u002f1991\",\"01\\u002f11\\u002f1991\",\"01\\u002f12\\u002f1991\",\"01\\u002f01\\u002f1992\",\"01\\u002f02\\u002f1992\",\"01\\u002f03\\u002f1992\",\"01\\u002f04\\u002f1992\",\"01\\u002f05\\u002f1992\",\"01\\u002f06\\u002f1992\",\"01\\u002f07\\u002f1992\",\"01\\u002f08\\u002f1992\",\"01\\u002f09\\u002f1992\",\"01\\u002f10\\u002f1992\",\"01\\u002f11\\u002f1992\",\"01\\u002f12\\u002f1992\",\"01\\u002f01\\u002f1993\",\"01\\u002f02\\u002f1993\",\"01\\u002f03\\u002f1993\",\"01\\u002f04\\u002f1993\",\"01\\u002f05\\u002f1993\",\"01\\u002f06\\u002f1993\",\"01\\u002f07\\u002f1993\",\"01\\u002f08\\u002f1993\",\"01\\u002f09\\u002f1993\",\"01\\u002f10\\u002f1993\",\"01\\u002f11\\u002f1993\",\"01\\u002f12\\u002f1993\",\"01\\u002f01\\u002f1994\",\"01\\u002f02\\u002f1994\",\"01\\u002f03\\u002f1994\",\"01\\u002f04\\u002f1994\",\"01\\u002f05\\u002f1994\",\"01\\u002f06\\u002f1994\",\"01\\u002f07\\u002f1994\",\"01\\u002f08\\u002f1994\",\"01\\u002f09\\u002f1994\",\"01\\u002f10\\u002f1994\",\"01\\u002f11\\u002f1994\",\"01\\u002f12\\u002f1994\",\"01\\u002f01\\u002f1995\",\"01\\u002f02\\u002f1995\",\"01\\u002f03\\u002f1995\",\"01\\u002f04\\u002f1995\",\"01\\u002f05\\u002f1995\",\"01\\u002f06\\u002f1995\",\"01\\u002f07\\u002f1995\",\"01\\u002f08\\u002f1995\",\"01\\u002f09\\u002f1995\",\"01\\u002f10\\u002f1995\",\"01\\u002f11\\u002f1995\",\"01\\u002f12\\u002f1995\",\"01\\u002f01\\u002f1996\",\"01\\u002f02\\u002f1996\",\"01\\u002f03\\u002f1996\",\"01\\u002f04\\u002f1996\",\"01\\u002f05\\u002f1996\",\"01\\u002f06\\u002f1996\",\"01\\u002f07\\u002f1996\",\"01\\u002f08\\u002f1996\",\"01\\u002f09\\u002f1996\",\"01\\u002f10\\u002f1996\",\"01\\u002f11\\u002f1996\",\"01\\u002f12\\u002f1996\",\"01\\u002f01\\u002f1997\",\"01\\u002f02\\u002f1997\",\"01\\u002f03\\u002f1997\",\"01\\u002f04\\u002f1997\",\"01\\u002f05\\u002f1997\",\"01\\u002f06\\u002f1997\",\"01\\u002f07\\u002f1997\",\"01\\u002f08\\u002f1997\",\"01\\u002f09\\u002f1997\",\"01\\u002f10\\u002f1997\",\"01\\u002f11\\u002f1997\",\"01\\u002f12\\u002f1997\",\"01\\u002f01\\u002f1998\",\"01\\u002f02\\u002f1998\",\"01\\u002f03\\u002f1998\",\"01\\u002f04\\u002f1998\",\"01\\u002f05\\u002f1998\",\"01\\u002f06\\u002f1998\",\"01\\u002f07\\u002f1998\",\"01\\u002f08\\u002f1998\",\"01\\u002f09\\u002f1998\",\"01\\u002f10\\u002f1998\",\"01\\u002f11\\u002f1998\",\"01\\u002f12\\u002f1998\",\"01\\u002f01\\u002f1999\",\"01\\u002f02\\u002f1999\",\"01\\u002f03\\u002f1999\",\"01\\u002f04\\u002f1999\",\"01\\u002f05\\u002f1999\",\"01\\u002f06\\u002f1999\",\"01\\u002f07\\u002f1999\",\"01\\u002f08\\u002f1999\",\"01\\u002f09\\u002f1999\",\"01\\u002f10\\u002f1999\",\"01\\u002f11\\u002f1999\",\"01\\u002f12\\u002f1999\",\"01\\u002f01\\u002f2000\",\"01\\u002f02\\u002f2000\",\"01\\u002f03\\u002f2000\",\"01\\u002f04\\u002f2000\",\"01\\u002f05\\u002f2000\",\"01\\u002f06\\u002f2000\",\"01\\u002f07\\u002f2000\",\"01\\u002f08\\u002f2000\",\"01\\u002f09\\u002f2000\",\"01\\u002f10\\u002f2000\",\"01\\u002f11\\u002f2000\",\"01\\u002f12\\u002f2000\",\"01\\u002f01\\u002f2001\",\"01\\u002f02\\u002f2001\",\"01\\u002f03\\u002f2001\",\"01\\u002f04\\u002f2001\",\"01\\u002f05\\u002f2001\",\"01\\u002f06\\u002f2001\",\"01\\u002f07\\u002f2001\",\"01\\u002f08\\u002f2001\",\"01\\u002f09\\u002f2001\",\"01\\u002f10\\u002f2001\",\"01\\u002f11\\u002f2001\",\"01\\u002f12\\u002f2001\",\"01\\u002f01\\u002f2002\",\"01\\u002f02\\u002f2002\",\"01\\u002f03\\u002f2002\",\"01\\u002f04\\u002f2002\",\"01\\u002f05\\u002f2002\",\"01\\u002f06\\u002f2002\",\"01\\u002f07\\u002f2002\",\"01\\u002f08\\u002f2002\",\"01\\u002f09\\u002f2002\",\"01\\u002f10\\u002f2002\",\"01\\u002f11\\u002f2002\",\"01\\u002f12\\u002f2002\",\"01\\u002f01\\u002f2003\",\"01\\u002f02\\u002f2003\",\"01\\u002f03\\u002f2003\",\"01\\u002f04\\u002f2003\",\"01\\u002f05\\u002f2003\",\"01\\u002f06\\u002f2003\",\"01\\u002f07\\u002f2003\",\"01\\u002f08\\u002f2003\",\"01\\u002f09\\u002f2003\",\"01\\u002f10\\u002f2003\",\"01\\u002f11\\u002f2003\",\"01\\u002f12\\u002f2003\",\"01\\u002f01\\u002f2004\",\"01\\u002f02\\u002f2004\",\"01\\u002f03\\u002f2004\",\"01\\u002f04\\u002f2004\",\"01\\u002f05\\u002f2004\",\"01\\u002f06\\u002f2004\",\"01\\u002f07\\u002f2004\",\"01\\u002f08\\u002f2004\",\"01\\u002f09\\u002f2004\",\"01\\u002f10\\u002f2004\",\"01\\u002f11\\u002f2004\",\"01\\u002f12\\u002f2004\",\"01\\u002f01\\u002f2005\",\"01\\u002f02\\u002f2005\",\"01\\u002f03\\u002f2005\",\"01\\u002f04\\u002f2005\",\"01\\u002f05\\u002f2005\",\"01\\u002f06\\u002f2005\",\"01\\u002f07\\u002f2005\",\"01\\u002f08\\u002f2005\",\"01\\u002f09\\u002f2005\",\"01\\u002f10\\u002f2005\",\"01\\u002f11\\u002f2005\",\"01\\u002f12\\u002f2005\",\"01\\u002f01\\u002f2006\",\"01\\u002f02\\u002f2006\",\"01\\u002f03\\u002f2006\",\"01\\u002f04\\u002f2006\",\"01\\u002f05\\u002f2006\",\"01\\u002f06\\u002f2006\",\"01\\u002f07\\u002f2006\",\"01\\u002f08\\u002f2006\",\"01\\u002f09\\u002f2006\",\"01\\u002f10\\u002f2006\",\"01\\u002f11\\u002f2006\",\"01\\u002f12\\u002f2006\",\"01\\u002f01\\u002f2007\",\"01\\u002f02\\u002f2007\",\"01\\u002f03\\u002f2007\",\"01\\u002f04\\u002f2007\",\"01\\u002f05\\u002f2007\",\"01\\u002f06\\u002f2007\",\"01\\u002f07\\u002f2007\",\"01\\u002f08\\u002f2007\",\"01\\u002f09\\u002f2007\",\"01\\u002f10\\u002f2007\",\"01\\u002f11\\u002f2007\",\"01\\u002f12\\u002f2007\",\"01\\u002f01\\u002f2008\",\"01\\u002f02\\u002f2008\",\"01\\u002f03\\u002f2008\",\"01\\u002f04\\u002f2008\",\"01\\u002f05\\u002f2008\",\"01\\u002f06\\u002f2008\",\"01\\u002f07\\u002f2008\",\"01\\u002f08\\u002f2008\",\"01\\u002f09\\u002f2008\",\"01\\u002f10\\u002f2008\",\"01\\u002f11\\u002f2008\",\"01\\u002f12\\u002f2008\",\"01\\u002f01\\u002f2009\",\"01\\u002f02\\u002f2009\",\"01\\u002f03\\u002f2009\",\"01\\u002f04\\u002f2009\",\"01\\u002f05\\u002f2009\",\"01\\u002f06\\u002f2009\",\"01\\u002f07\\u002f2009\",\"01\\u002f08\\u002f2009\",\"01\\u002f09\\u002f2009\",\"01\\u002f10\\u002f2009\",\"01\\u002f11\\u002f2009\",\"01\\u002f12\\u002f2009\",\"01\\u002f01\\u002f2010\",\"01\\u002f02\\u002f2010\",\"01\\u002f03\\u002f2010\",\"01\\u002f04\\u002f2010\",\"01\\u002f05\\u002f2010\",\"01\\u002f06\\u002f2010\",\"01\\u002f07\\u002f2010\",\"01\\u002f08\\u002f2010\",\"01\\u002f09\\u002f2010\",\"01\\u002f10\\u002f2010\",\"01\\u002f11\\u002f2010\",\"01\\u002f12\\u002f2010\",\"01\\u002f01\\u002f2011\",\"01\\u002f02\\u002f2011\",\"01\\u002f03\\u002f2011\",\"01\\u002f04\\u002f2011\",\"01\\u002f05\\u002f2011\",\"01\\u002f06\\u002f2011\",\"01\\u002f07\\u002f2011\",\"01\\u002f08\\u002f2011\",\"01\\u002f09\\u002f2011\",\"01\\u002f10\\u002f2011\",\"01\\u002f11\\u002f2011\",\"01\\u002f12\\u002f2011\",\"01\\u002f01\\u002f2012\",\"01\\u002f02\\u002f2012\",\"01\\u002f03\\u002f2012\",\"01\\u002f04\\u002f2012\",\"01\\u002f05\\u002f2012\",\"01\\u002f06\\u002f2012\",\"01\\u002f07\\u002f2012\",\"01\\u002f08\\u002f2012\",\"01\\u002f09\\u002f2012\",\"01\\u002f10\\u002f2012\",\"01\\u002f11\\u002f2012\",\"01\\u002f12\\u002f2012\",\"01\\u002f01\\u002f2013\",\"01\\u002f02\\u002f2013\",\"01\\u002f03\\u002f2013\",\"01\\u002f04\\u002f2013\",\"01\\u002f05\\u002f2013\",\"01\\u002f06\\u002f2013\",\"01\\u002f07\\u002f2013\",\"01\\u002f08\\u002f2013\",\"01\\u002f09\\u002f2013\",\"01\\u002f10\\u002f2013\",\"01\\u002f11\\u002f2013\",\"01\\u002f12\\u002f2013\",\"01\\u002f01\\u002f2014\",\"01\\u002f02\\u002f2014\",\"01\\u002f03\\u002f2014\",\"01\\u002f04\\u002f2014\",\"01\\u002f05\\u002f2014\",\"01\\u002f06\\u002f2014\",\"01\\u002f07\\u002f2014\",\"01\\u002f08\\u002f2014\",\"01\\u002f09\\u002f2014\",\"01\\u002f10\\u002f2014\",\"01\\u002f11\\u002f2014\",\"01\\u002f12\\u002f2014\",\"01\\u002f01\\u002f2015\",\"01\\u002f02\\u002f2015\",\"01\\u002f03\\u002f2015\",\"01\\u002f04\\u002f2015\",\"01\\u002f05\\u002f2015\",\"01\\u002f06\\u002f2015\",\"01\\u002f07\\u002f2015\",\"01\\u002f08\\u002f2015\",\"01\\u002f09\\u002f2015\",\"01\\u002f10\\u002f2015\",\"01\\u002f11\\u002f2015\",\"01\\u002f12\\u002f2015\",\"01\\u002f01\\u002f2016\",\"01\\u002f02\\u002f2016\",\"01\\u002f03\\u002f2016\"],\"y\":[null,null,null,null,null,null,null,null,null,null,null,6.605164004,6.613395683,6.698321332,6.786410398,6.746292475,6.804213559,6.766506465,6.714488832,6.771237799,6.834380846,6.71974826,6.809544528,6.853673281,7.070893022,7.223751619,7.207361283,7.447707886,7.524754105,7.589252499,7.777255214,7.968119413,8.206600744,8.338959653,8.499250127,8.47743302,8.646243372,8.851582764,9.127227774,9.340419212,9.567663577,9.938205457,10.17172112,10.35044546,10.36908751,10.67477337,10.77108255,10.8995757,11.02510626,11.01843905,11.0043617,10.982221,11.03597003,10.90096189,10.92628826,10.8918442,10.9505091,10.77862334,10.79908955,10.99722191,10.97296749,11.31767738,11.35369938,11.43143601,11.32716582,11.40853122,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,11.92838516,11.89171511,11.9987395,12.16051308,12.25816033,12.32853422,12.3168411,12.20475082,12.37111266,12.12079304,11.89607714,11.85269717,11.99219597,11.970035,11.83693431,11.82746513,11.63119538,11.52855988,11.6825413,11.62735128,11.38002911,11.43557238,11.25092134,11.08706165,10.81910116,10.55985291,10.50235281,10.32130042,10.38527859,10.25164903,10.11669334,10.03973056,9.953768673,9.698083427,9.672247129,9.674433361,9.694181141,9.766757715,9.704133801,9.535516467,9.395761428,9.274702365,9.198578028,9.136452341,9.076025705,9.214698937,9.280451153,9.292087839,9.30420399,9.393777761,9.397759024,9.489111891,9.626393439,9.847315068,9.942408464,10.01303204,10.21834471,10.30406056,10.37433037,10.38299536,10.45267062,10.40304588,10.53909046,10.422798,10.41595093,10.36146919,10.34706115,10.37561493,10.27362069,10.28488919,10.28035192,10.29163478,10.27249917,10.36949535,10.33843047,10.47686769,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,11.22262399,11.02009478,11.14036951,11.06441156,11.08095704,11.0870896,10.81555011,10.90644714,10.62299406,10.47215408,10.49872189,10.42780953,10.30715753,10.5739952,10.42674729,10.47757787,10.44796489,10.26793509,10.29543831,10.23912487,10.43976811,10.57982142,10.35041494,10.44377057,10.41080622,10.35158921,10.46736358,10.3062278,10.35457824,10.60517634,10.68094088,10.76730529,10.61873032,10.76345665,11.16016537,10.99180807,11.20942258,11.13283085,11.23452765,11.24501708,11.31286857,11.43702209,11.33783112,11.45561876,11.47280787,11.37372737,11.23068954,11.30138706,11.08392068,11.25062583,11.1692162,11.29728297,11.4029701,11.23998135,11.51342957,11.47128708,11.6960495,11.6753007,11.67300468,11.69427176,11.89795108,11.9748067,12.02305598,12.13950576,12.06974213,12.32571669,12.19190355,12.29300441,12.23323322,12.2149996,12.40710646,12.63972822,12.6731404,12.82942392,12.9136579,12.8175588,13.01531445,12.83188441,13.00541193,12.99382768,13.11441298,13.39902328,13.50637495,13.45957011,13.5093923,13.07650986,13.1179794,13.15860089,13.14030944,13.13699075,13.14846232,13.16858321,12.99118762,12.92745785,12.6706327,12.51418072,12.36105518,12.70802205,12.65724359,12.70150477,12.67318477,12.7159712,12.54205207,12.4541169,12.55306397,12.2617725,12.38436777,12.48616229,12.49493046,12.28016642,12.25686733,12.08661243,11.86619977,11.66153198,11.6308659,11.48718018,11.36799223,11.47183954,11.402925,11.15313688,11.03287973,11.13049508,10.97513026,10.89873808,10.99991565,11.16485964,11.13731169,11.05853211,11.05863626,11.07272816,10.94142501,11.15920259,11.36076018,11.32263784,11.35958457,11.56934115,11.5976025,11.60843933,11.57454252,11.94114459,12.24289825,12.44813508,12.71644485,12.74787066,12.96763131,13.15701659,13.48728402,13.6556446,14.02298503,14.22392842,14.60784184,14.82413481,14.83105534,15.02069466,15.26923704,15.59085945,15.64143279,15.73789381,15.89439392,15.79476796,15.88824166,16.03740964,16.08557355,16.0669447,16.25443149,16.44848895,16.2887708,16.39110234,16.26764332,16.55614608,16.32484788,16.2190872,16.02136776,15.91428157,16.05508556,15.91968476,15.87557595,15.73612457,16.00652301,15.94163478,16.09283829,15.74554677,15.93072041,15.97518509,15.85886282,15.68466548,15.59598882,15.78934359,15.80257507,15.87141218,15.78174514,15.65949686,15.52749282,15.53894805,15.35157644,15.49349142,15.59655897,15.8849417,15.82119744,15.60299997,15.57671608,15.32385881,15.3722664,15.44439431,15.45936733,15.49073502,15.56342606,15.44374988,15.3924056,15.43429467,15.249301,15.35263764,15.09088629,15.36718765,15.38105001,15.0977356,15.00774435,15.11635922,15.17209062,15.22068553,15.31834299,15.06566044,15.08836175,14.88218651],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('93c08c27-7032-414b-9037-f81f71363e13');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'lifeExp.html'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ws0UHkK92n1r",
        "outputId": "6a5fbce6-f677-4a63-8fc3-3718fdc6d91c"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(435, 11)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ssanHmS72puL",
        "outputId": "cbde5c9f-a13b-4267-a330-f40c5ec28832"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 435 entries, 0 to 434\n",
            "Data columns (total 11 columns):\n",
            " #   Column                               Non-Null Count  Dtype  \n",
            "---  ------                               --------------  -----  \n",
            " 0   Date                                 435 non-null    object \n",
            " 1   All workers (hourly and non-hourly)  355 non-null    float64\n",
            " 2   Hourly workers                       355 non-null    float64\n",
            " 3   Non-hourly workers                   355 non-null    float64\n",
            " 4   Less than high school                355 non-null    float64\n",
            " 5   High school                          355 non-null    float64\n",
            " 6   Some college                         355 non-null    float64\n",
            " 7   College                              355 non-null    float64\n",
            " 8   Construction                         319 non-null    float64\n",
            " 9   Finance                              319 non-null    float64\n",
            " 10  Manufacturing                        319 non-null    float64\n",
            "dtypes: float64(10), object(1)\n",
            "memory usage: 37.5+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "WGZ6wIGr2rWb",
        "outputId": "d61b8b6c-aeca-42ea-da05-1299273ebc5f"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       All workers (hourly and non-hourly)  Hourly workers  \\\n",
              "count                           355.000000      355.000000   \n",
              "mean                             11.894861       15.323174   \n",
              "std                               2.384779        3.418401   \n",
              "min                               6.605164        7.104570   \n",
              "25%                              10.424773       13.307695   \n",
              "50%                              11.408531       14.970094   \n",
              "75%                              13.116196       17.452981   \n",
              "max                              16.556146       21.603922   \n",
              "\n",
              "       Non-hourly workers  Less than high school  High school  Some college  \\\n",
              "count          355.000000             355.000000   355.000000    355.000000   \n",
              "mean             7.644862              16.775760    13.619809     11.860613   \n",
              "std              1.470252               3.345550     2.971548      2.932004   \n",
              "min              5.409868               7.762954     7.281848      5.364469   \n",
              "25%              6.513803              14.902002    11.772033     10.167523   \n",
              "50%              7.295453              17.081236    13.027447     11.475066   \n",
              "75%              8.243320              19.052437    15.397392     13.608338   \n",
              "max             11.131365              24.046661    19.637450     18.169493   \n",
              "\n",
              "          College  Construction     Finance  Manufacturing  \n",
              "count  355.000000    319.000000  319.000000     319.000000  \n",
              "mean     8.641201     17.159821   10.279682      12.671237  \n",
              "std      2.272413      2.852644    2.468336       2.272036  \n",
              "min      4.882943     11.706936    6.535848       8.293996  \n",
              "25%      6.932124     14.749343    8.375633      10.652493  \n",
              "50%      8.068646     16.788421    9.582629      12.708092  \n",
              "75%      9.584967     19.255972   11.876664      14.539167  \n",
              "max     13.964595     24.422166   16.515241      17.233545  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-2ca09169-3c0f-4ff1-ac74-7d20ef2bfdcd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>All workers (hourly and non-hourly)</th>\n",
              "      <th>Hourly workers</th>\n",
              "      <th>Non-hourly workers</th>\n",
              "      <th>Less than high school</th>\n",
              "      <th>High school</th>\n",
              "      <th>Some college</th>\n",
              "      <th>College</th>\n",
              "      <th>Construction</th>\n",
              "      <th>Finance</th>\n",
              "      <th>Manufacturing</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>355.000000</td>\n",
              "      <td>355.000000</td>\n",
              "      <td>355.000000</td>\n",
              "      <td>355.000000</td>\n",
              "      <td>355.000000</td>\n",
              "      <td>355.000000</td>\n",
              "      <td>355.000000</td>\n",
              "      <td>319.000000</td>\n",
              "      <td>319.000000</td>\n",
              "      <td>319.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>11.894861</td>\n",
              "      <td>15.323174</td>\n",
              "      <td>7.644862</td>\n",
              "      <td>16.775760</td>\n",
              "      <td>13.619809</td>\n",
              "      <td>11.860613</td>\n",
              "      <td>8.641201</td>\n",
              "      <td>17.159821</td>\n",
              "      <td>10.279682</td>\n",
              "      <td>12.671237</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>2.384779</td>\n",
              "      <td>3.418401</td>\n",
              "      <td>1.470252</td>\n",
              "      <td>3.345550</td>\n",
              "      <td>2.971548</td>\n",
              "      <td>2.932004</td>\n",
              "      <td>2.272413</td>\n",
              "      <td>2.852644</td>\n",
              "      <td>2.468336</td>\n",
              "      <td>2.272036</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>6.605164</td>\n",
              "      <td>7.104570</td>\n",
              "      <td>5.409868</td>\n",
              "      <td>7.762954</td>\n",
              "      <td>7.281848</td>\n",
              "      <td>5.364469</td>\n",
              "      <td>4.882943</td>\n",
              "      <td>11.706936</td>\n",
              "      <td>6.535848</td>\n",
              "      <td>8.293996</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>10.424773</td>\n",
              "      <td>13.307695</td>\n",
              "      <td>6.513803</td>\n",
              "      <td>14.902002</td>\n",
              "      <td>11.772033</td>\n",
              "      <td>10.167523</td>\n",
              "      <td>6.932124</td>\n",
              "      <td>14.749343</td>\n",
              "      <td>8.375633</td>\n",
              "      <td>10.652493</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>11.408531</td>\n",
              "      <td>14.970094</td>\n",
              "      <td>7.295453</td>\n",
              "      <td>17.081236</td>\n",
              "      <td>13.027447</td>\n",
              "      <td>11.475066</td>\n",
              "      <td>8.068646</td>\n",
              "      <td>16.788421</td>\n",
              "      <td>9.582629</td>\n",
              "      <td>12.708092</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>13.116196</td>\n",
              "      <td>17.452981</td>\n",
              "      <td>8.243320</td>\n",
              "      <td>19.052437</td>\n",
              "      <td>15.397392</td>\n",
              "      <td>13.608338</td>\n",
              "      <td>9.584967</td>\n",
              "      <td>19.255972</td>\n",
              "      <td>11.876664</td>\n",
              "      <td>14.539167</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>16.556146</td>\n",
              "      <td>21.603922</td>\n",
              "      <td>11.131365</td>\n",
              "      <td>24.046661</td>\n",
              "      <td>19.637450</td>\n",
              "      <td>18.169493</td>\n",
              "      <td>13.964595</td>\n",
              "      <td>24.422166</td>\n",
              "      <td>16.515241</td>\n",
              "      <td>17.233545</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ca09169-3c0f-4ff1-ac74-7d20ef2bfdcd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-c7c44f8b-ec23-45e5-9cdd-ac80b5f2b4c9\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c7c44f8b-ec23-45e5-9cdd-ac80b5f2b4c9')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-c7c44f8b-ec23-45e5-9cdd-ac80b5f2b4c9 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2ca09169-3c0f-4ff1-ac74-7d20ef2bfdcd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2ca09169-3c0f-4ff1-ac74-7d20ef2bfdcd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "3HxKEKfO2wf2",
        "outputId": "e3acc0ab-9286-44d0-fba2-a8101f5cbc8d"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Date  All workers (hourly and non-hourly)  Hourly workers  \\\n",
              "0  01/01/1980                                  NaN             NaN   \n",
              "1  01/02/1980                                  NaN             NaN   \n",
              "2  01/03/1980                                  NaN             NaN   \n",
              "3  01/04/1980                                  NaN             NaN   \n",
              "4  01/05/1980                                  NaN             NaN   \n",
              "\n",
              "   Non-hourly workers  Less than high school  High school  Some college  \\\n",
              "0                 NaN                    NaN          NaN           NaN   \n",
              "1                 NaN                    NaN          NaN           NaN   \n",
              "2                 NaN                    NaN          NaN           NaN   \n",
              "3                 NaN                    NaN          NaN           NaN   \n",
              "4                 NaN                    NaN          NaN           NaN   \n",
              "\n",
              "   College  Construction  Finance  Manufacturing  \n",
              "0      NaN           NaN      NaN            NaN  \n",
              "1      NaN           NaN      NaN            NaN  \n",
              "2      NaN           NaN      NaN            NaN  \n",
              "3      NaN           NaN      NaN            NaN  \n",
              "4      NaN           NaN      NaN            NaN  "
            ],
            "text/html": [
              "\n",
              "\n",
              "  <div id=\"df-b89bf20c-109a-4100-b970-416b09815a4d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>All workers (hourly and non-hourly)</th>\n",
              "      <th>Hourly workers</th>\n",
              "      <th>Non-hourly workers</th>\n",
              "      <th>Less than high school</th>\n",
              "      <th>High school</th>\n",
              "      <th>Some college</th>\n",
              "      <th>College</th>\n",
              "      <th>Construction</th>\n",
              "      <th>Finance</th>\n",
              "      <th>Manufacturing</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>01/01/1980</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>01/02/1980</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>01/03/1980</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>01/04/1980</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>01/05/1980</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b89bf20c-109a-4100-b970-416b09815a4d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "\n",
              "\n",
              "\n",
              "    <div id=\"df-bfe0889e-7368-4317-847f-6d47ee21e724\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bfe0889e-7368-4317-847f-6d47ee21e724')\"\n",
              "              title=\"Suggest charts.\"\n",
              "              style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "    </div>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "    background-color: #E8F0FE;\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: #1967D2;\n",
              "    height: 32px;\n",
              "    padding: 0 0 0 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: #E2EBFA;\n",
              "    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: #174EA6;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "    background-color: #3B4455;\n",
              "    fill: #D2E3FC;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart:hover {\n",
              "    background-color: #434B5C;\n",
              "    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "    fill: #FFFFFF;\n",
              "  }\n",
              "</style>\n",
              "\n",
              "    <script>\n",
              "      async function quickchart(key) {\n",
              "        const containerElement = document.querySelector('#' + key);\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      }\n",
              "    </script>\n",
              "\n",
              "      <script>\n",
              "\n",
              "function displayQuickchartButton(domScope) {\n",
              "  let quickchartButtonEl =\n",
              "    domScope.querySelector('#df-bfe0889e-7368-4317-847f-6d47ee21e724 button.colab-df-quickchart');\n",
              "  quickchartButtonEl.style.display =\n",
              "    google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "}\n",
              "\n",
              "        displayQuickchartButton(document);\n",
              "      </script>\n",
              "      <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b89bf20c-109a-4100-b970-416b09815a4d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b89bf20c-109a-4100-b970-416b09815a4d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "type(df.Date)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T-CWUbm22x9H",
        "outputId": "b0f30856-c5a4-41db-ee87-16023ead6edb"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "pandas.core.series.Series"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Date'] = pd.to_datetime(df['Date'])\n",
        "df['Date'] > pd.to_datetime('01/06/1990')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-VWx2d5L22H-",
        "outputId": "42b13b4f-a4ab-4e22-b928-2fdb18c3e9e2"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0      False\n",
              "1      False\n",
              "2      False\n",
              "3      False\n",
              "4      False\n",
              "       ...  \n",
              "430     True\n",
              "431     True\n",
              "432     True\n",
              "433     True\n",
              "434     True\n",
              "Name: Date, Length: 435, dtype: bool"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1=df[df['Date'] > pd.to_datetime('01/06/1990')]"
      ],
      "metadata": {
        "id": "bp4xl4Uz3AWx"
      },
      "execution_count": 15,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "line1 = go.Scatter(x=df1['Date'], y=df1['All workers (hourly and non-hourly)'], name='All workers (hourly and non-hourly)')\n",
        "fig  = go.Figure(line1)\n",
        "fig.show()\n",
        "plotly.offline.plot(fig, filename='lifeExp1.html')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 561
        },
        "id": "pmC6Zq3l3O09",
        "outputId": "068201cc-bcfc-41be-a74c-33f6e7323d8a"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"774285ce-5258-4166-bd74-60d410e60732\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"774285ce-5258-4166-bd74-60d410e60732\")) {                    Plotly.newPlot(                        \"774285ce-5258-4166-bd74-60d410e60732\",                        [{\"name\":\"All workers (hourly and non-hourly)\",\"x\":[\"1990-01-07T00:00:00\",\"1990-01-08T00:00:00\",\"1990-01-09T00:00:00\",\"1990-01-10T00:00:00\",\"1990-01-11T00:00:00\",\"1990-01-12T00:00:00\",\"1991-01-01T00:00:00\",\"1991-01-02T00:00:00\",\"1991-01-03T00:00:00\",\"1991-01-04T00:00:00\",\"1991-01-05T00:00:00\",\"1991-01-06T00:00:00\",\"1991-01-07T00:00:00\",\"1991-01-08T00:00:00\",\"1991-01-09T00:00:00\",\"1991-01-10T00:00:00\",\"1991-01-11T00:00:00\",\"1991-01-12T00:00:00\",\"1992-01-01T00:00:00\",\"1992-01-02T00:00:00\",\"1992-01-03T00:00:00\",\"1992-01-04T00:00:00\",\"1992-01-05T00:00:00\",\"1992-01-06T00:00:00\",\"1992-01-07T00:00:00\",\"1992-01-08T00:00:00\",\"1992-01-09T00:00:00\",\"1992-01-10T00:00:00\",\"1992-01-11T00:00:00\",\"1992-01-12T00:00:00\",\"1993-01-01T00:00:00\",\"1993-01-02T00:00:00\",\"1993-01-03T00:00:00\",\"1993-01-04T00:00:00\",\"1993-01-05T00:00:00\",\"1993-01-06T00:00:00\",\"1993-01-07T00:00:00\",\"1993-01-08T00:00:00\",\"1993-01-09T00:00:00\",\"1993-01-10T00:00:00\",\"1993-01-11T00:00:00\",\"1993-01-12T00:00:00\",\"1994-01-01T00:00:00\",\"1994-01-02T00:00:00\",\"1994-01-03T00:00:00\",\"1994-01-04T00:00:00\",\"1994-01-05T00:00:00\",\"1994-01-06T00:00:00\",\"1994-01-07T00:00:00\",\"1994-01-08T00:00:00\",\"1994-01-09T00:00:00\",\"1994-01-10T00:00:00\",\"1994-01-11T00:00:00\",\"1994-01-12T00:00:00\",\"1995-01-01T00:00:00\",\"1995-01-02T00:00:00\",\"1995-01-03T00:00:00\",\"1995-01-04T00:00:00\",\"1995-01-05T00:00:00\",\"1995-01-06T00:00:00\",\"1995-01-07T00:00:00\",\"1995-01-08T00:00:00\",\"1995-01-09T00:00:00\",\"1995-01-10T00:00:00\",\"1995-01-11T00:00:00\",\"1995-01-12T00:00:00\",\"1996-01-01T00:00:00\",\"1996-01-02T00:00:00\",\"1996-01-03T00:00:00\",\"1996-01-04T00:00:00\",\"1996-01-05T00:00:00\",\"1996-01-06T00:00:00\",\"1996-01-07T00:00:00\",\"1996-01-08T00:00:00\",\"1996-01-09T00:00:00\",\"1996-01-10T00:00:00\",\"1996-01-11T00:00:00\",\"1996-01-12T00:00:00\",\"1997-01-01T00:00:00\",\"1997-01-02T00:00:00\",\"1997-01-03T00:00:00\",\"1997-01-04T00:00:00\",\"1997-01-05T00:00:00\",\"1997-01-06T00:00:00\",\"1997-01-07T00:00:00\",\"1997-01-08T00:00:00\",\"1997-01-09T00:00:00\",\"1997-01-10T00:00:00\",\"1997-01-11T00:00:00\",\"1997-01-12T00:00:00\",\"1998-01-01T00:00:00\",\"1998-01-02T00:00:00\",\"1998-01-03T00:00:00\",\"1998-01-04T00:00:00\",\"1998-01-05T00:00:00\",\"1998-01-06T00:00:00\",\"1998-01-07T00:00:00\",\"1998-01-08T00:00:00\",\"1998-01-09T00:00:00\",\"1998-01-10T00:00:00\",\"1998-01-11T00:00:00\",\"1998-01-12T00:00:00\",\"1999-01-01T00:00:00\",\"1999-01-02T00:00:00\",\"1999-01-03T00:00:00\",\"1999-01-04T00:00:00\",\"1999-01-05T00:00:00\",\"1999-01-06T00:00:00\",\"1999-01-07T00:00:00\",\"1999-01-08T00:00:00\",\"1999-01-09T00:00:00\",\"1999-01-10T00:00:00\",\"1999-01-11T00:00:00\",\"1999-01-12T00:00:00\",\"2000-01-01T00:00:00\",\"2000-01-02T00:00:00\",\"2000-01-03T00:00:00\",\"2000-01-04T00:00:00\",\"2000-01-05T00:00:00\",\"2000-01-06T00:00:00\",\"2000-01-07T00:00:00\",\"2000-01-08T00:00:00\",\"2000-01-09T00:00:00\",\"2000-01-10T00:00:00\",\"2000-01-11T00:00:00\",\"2000-01-12T00:00:00\",\"2001-01-01T00:00:00\",\"2001-01-02T00:00:00\",\"2001-01-03T00:00:00\",\"2001-01-04T00:00:00\",\"2001-01-05T00:00:00\",\"2001-01-06T00:00:00\",\"2001-01-07T00:00:00\",\"2001-01-08T00:00:00\",\"2001-01-09T00:00:00\",\"2001-01-10T00:00:00\",\"2001-01-11T00:00:00\",\"2001-01-12T00:00:00\",\"2002-01-01T00:00:00\",\"2002-01-02T00:00:00\",\"2002-01-03T00:00:00\",\"2002-01-04T00:00:00\",\"2002-01-05T00:00:00\",\"2002-01-06T00:00:00\",\"2002-01-07T00:00:00\",\"2002-01-08T00:00:00\",\"2002-01-09T00:00:00\",\"2002-01-10T00:00:00\",\"2002-01-11T00:00:00\",\"2002-01-12T00:00:00\",\"2003-01-01T00:00:00\",\"2003-01-02T00:00:00\",\"2003-01-03T00:00:00\",\"2003-01-04T00:00:00\",\"2003-01-05T00:00:00\",\"2003-01-06T00:00:00\",\"2003-01-07T00:00:00\",\"2003-01-08T00:00:00\",\"2003-01-09T00:00:00\",\"2003-01-10T00:00:00\",\"2003-01-11T00:00:00\",\"2003-01-12T00:00:00\",\"2004-01-01T00:00:00\",\"2004-01-02T00:00:00\",\"2004-01-03T00:00:00\",\"2004-01-04T00:00:00\",\"2004-01-05T00:00:00\",\"2004-01-06T00:00:00\",\"2004-01-07T00:00:00\",\"2004-01-08T00:00:00\",\"2004-01-09T00:00:00\",\"2004-01-10T00:00:00\",\"2004-01-11T00:00:00\",\"2004-01-12T00:00:00\",\"2005-01-01T00:00:00\",\"2005-01-02T00:00:00\",\"2005-01-03T00:00:00\",\"2005-01-04T00:00:00\",\"2005-01-05T00:00:00\",\"2005-01-06T00:00:00\",\"2005-01-07T00:00:00\",\"2005-01-08T00:00:00\",\"2005-01-09T00:00:00\",\"2005-01-10T00:00:00\",\"2005-01-11T00:00:00\",\"2005-01-12T00:00:00\",\"2006-01-01T00:00:00\",\"2006-01-02T00:00:00\",\"2006-01-03T00:00:00\",\"2006-01-04T00:00:00\",\"2006-01-05T00:00:00\",\"2006-01-06T00:00:00\",\"2006-01-07T00:00:00\",\"2006-01-08T00:00:00\",\"2006-01-09T00:00:00\",\"2006-01-10T00:00:00\",\"2006-01-11T00:00:00\",\"2006-01-12T00:00:00\",\"2007-01-01T00:00:00\",\"2007-01-02T00:00:00\",\"2007-01-03T00:00:00\",\"2007-01-04T00:00:00\",\"2007-01-05T00:00:00\",\"2007-01-06T00:00:00\",\"2007-01-07T00:00:00\",\"2007-01-08T00:00:00\",\"2007-01-09T00:00:00\",\"2007-01-10T00:00:00\",\"2007-01-11T00:00:00\",\"2007-01-12T00:00:00\",\"2008-01-01T00:00:00\",\"2008-01-02T00:00:00\",\"2008-01-03T00:00:00\",\"2008-01-04T00:00:00\",\"2008-01-05T00:00:00\",\"2008-01-06T00:00:00\",\"2008-01-07T00:00:00\",\"2008-01-08T00:00:00\",\"2008-01-09T00:00:00\",\"2008-01-10T00:00:00\",\"2008-01-11T00:00:00\",\"2008-01-12T00:00:00\",\"2009-01-01T00:00:00\",\"2009-01-02T00:00:00\",\"2009-01-03T00:00:00\",\"2009-01-04T00:00:00\",\"2009-01-05T00:00:00\",\"2009-01-06T00:00:00\",\"2009-01-07T00:00:00\",\"2009-01-08T00:00:00\",\"2009-01-09T00:00:00\",\"2009-01-10T00:00:00\",\"2009-01-11T00:00:00\",\"2009-01-12T00:00:00\",\"2010-01-01T00:00:00\",\"2010-01-02T00:00:00\",\"2010-01-03T00:00:00\",\"2010-01-04T00:00:00\",\"2010-01-05T00:00:00\",\"2010-01-06T00:00:00\",\"2010-01-07T00:00:00\",\"2010-01-08T00:00:00\",\"2010-01-09T00:00:00\",\"2010-01-10T00:00:00\",\"2010-01-11T00:00:00\",\"2010-01-12T00:00:00\",\"2011-01-01T00:00:00\",\"2011-01-02T00:00:00\",\"2011-01-03T00:00:00\",\"2011-01-04T00:00:00\",\"2011-01-05T00:00:00\",\"2011-01-06T00:00:00\",\"2011-01-07T00:00:00\",\"2011-01-08T00:00:00\",\"2011-01-09T00:00:00\",\"2011-01-10T00:00:00\",\"2011-01-11T00:00:00\",\"2011-01-12T00:00:00\",\"2012-01-01T00:00:00\",\"2012-01-02T00:00:00\",\"2012-01-03T00:00:00\",\"2012-01-04T00:00:00\",\"2012-01-05T00:00:00\",\"2012-01-06T00:00:00\",\"2012-01-07T00:00:00\",\"2012-01-08T00:00:00\",\"2012-01-09T00:00:00\",\"2012-01-10T00:00:00\",\"2012-01-11T00:00:00\",\"2012-01-12T00:00:00\",\"2013-01-01T00:00:00\",\"2013-01-02T00:00:00\",\"2013-01-03T00:00:00\",\"2013-01-04T00:00:00\",\"2013-01-05T00:00:00\",\"2013-01-06T00:00:00\",\"2013-01-07T00:00:00\",\"2013-01-08T00:00:00\",\"2013-01-09T00:00:00\",\"2013-01-10T00:00:00\",\"2013-01-11T00:00:00\",\"2013-01-12T00:00:00\",\"2014-01-01T00:00:00\",\"2014-01-02T00:00:00\",\"2014-01-03T00:00:00\",\"2014-01-04T00:00:00\",\"2014-01-05T00:00:00\",\"2014-01-06T00:00:00\",\"2014-01-07T00:00:00\",\"2014-01-08T00:00:00\",\"2014-01-09T00:00:00\",\"2014-01-10T00:00:00\",\"2014-01-11T00:00:00\",\"2014-01-12T00:00:00\",\"2015-01-01T00:00:00\",\"2015-01-02T00:00:00\",\"2015-01-03T00:00:00\",\"2015-01-04T00:00:00\",\"2015-01-05T00:00:00\",\"2015-01-06T00:00:00\",\"2015-01-07T00:00:00\",\"2015-01-08T00:00:00\",\"2015-01-09T00:00:00\",\"2015-01-10T00:00:00\",\"2015-01-11T00:00:00\",\"2015-01-12T00:00:00\",\"2016-01-01T00:00:00\",\"2016-01-02T00:00:00\",\"2016-01-03T00:00:00\"],\"y\":[9.672247129,9.674433361,9.694181141,9.766757715,9.704133801,9.535516467,9.395761428,9.274702365,9.198578028,9.136452341,9.076025705,9.214698937,9.280451153,9.292087839,9.30420399,9.393777761,9.397759024,9.489111891,9.626393439,9.847315068,9.942408464,10.01303204,10.21834471,10.30406056,10.37433037,10.38299536,10.45267062,10.40304588,10.53909046,10.422798,10.41595093,10.36146919,10.34706115,10.37561493,10.27362069,10.28488919,10.28035192,10.29163478,10.27249917,10.36949535,10.33843047,10.47686769,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,11.22262399,11.02009478,11.14036951,11.06441156,11.08095704,11.0870896,10.81555011,10.90644714,10.62299406,10.47215408,10.49872189,10.42780953,10.30715753,10.5739952,10.42674729,10.47757787,10.44796489,10.26793509,10.29543831,10.23912487,10.43976811,10.57982142,10.35041494,10.44377057,10.41080622,10.35158921,10.46736358,10.3062278,10.35457824,10.60517634,10.68094088,10.76730529,10.61873032,10.76345665,11.16016537,10.99180807,11.20942258,11.13283085,11.23452765,11.24501708,11.31286857,11.43702209,11.33783112,11.45561876,11.47280787,11.37372737,11.23068954,11.30138706,11.08392068,11.25062583,11.1692162,11.29728297,11.4029701,11.23998135,11.51342957,11.47128708,11.6960495,11.6753007,11.67300468,11.69427176,11.89795108,11.9748067,12.02305598,12.13950576,12.06974213,12.32571669,12.19190355,12.29300441,12.23323322,12.2149996,12.40710646,12.63972822,12.6731404,12.82942392,12.9136579,12.8175588,13.01531445,12.83188441,13.00541193,12.99382768,13.11441298,13.39902328,13.50637495,13.45957011,13.5093923,13.07650986,13.1179794,13.15860089,13.14030944,13.13699075,13.14846232,13.16858321,12.99118762,12.92745785,12.6706327,12.51418072,12.36105518,12.70802205,12.65724359,12.70150477,12.67318477,12.7159712,12.54205207,12.4541169,12.55306397,12.2617725,12.38436777,12.48616229,12.49493046,12.28016642,12.25686733,12.08661243,11.86619977,11.66153198,11.6308659,11.48718018,11.36799223,11.47183954,11.402925,11.15313688,11.03287973,11.13049508,10.97513026,10.89873808,10.99991565,11.16485964,11.13731169,11.05853211,11.05863626,11.07272816,10.94142501,11.15920259,11.36076018,11.32263784,11.35958457,11.56934115,11.5976025,11.60843933,11.57454252,11.94114459,12.24289825,12.44813508,12.71644485,12.74787066,12.96763131,13.15701659,13.48728402,13.6556446,14.02298503,14.22392842,14.60784184,14.82413481,14.83105534,15.02069466,15.26923704,15.59085945,15.64143279,15.73789381,15.89439392,15.79476796,15.88824166,16.03740964,16.08557355,16.0669447,16.25443149,16.44848895,16.2887708,16.39110234,16.26764332,16.55614608,16.32484788,16.2190872,16.02136776,15.91428157,16.05508556,15.91968476,15.87557595,15.73612457,16.00652301,15.94163478,16.09283829,15.74554677,15.93072041,15.97518509,15.85886282,15.68466548,15.59598882,15.78934359,15.80257507,15.87141218,15.78174514,15.65949686,15.52749282,15.53894805,15.35157644,15.49349142,15.59655897,15.8849417,15.82119744,15.60299997,15.57671608,15.32385881,15.3722664,15.44439431,15.45936733,15.49073502,15.56342606,15.44374988,15.3924056,15.43429467,15.249301,15.35263764,15.09088629,15.36718765,15.38105001,15.0977356,15.00774435,15.11635922,15.17209062,15.22068553,15.31834299,15.06566044,15.08836175,14.88218651],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('774285ce-5258-4166-bd74-60d410e60732');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'lifeExp1.html'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    }
  ]
}